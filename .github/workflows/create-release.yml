name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: build cmd
      run: |
        pushd ./cmd/longtail
        go build -ldflags="-s -w" .
        popd
    - name: build dist
      run: |
        mkdir dist
        cp ./cmd/longtail/longtail dist/
    - uses: actions/upload-artifact@master
      with:
        name: dist-linux-x64
        path: dist

  build-macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: build cmd
      run: |
        pushd ./cmd/longtail
        go build -ldflags="-s -w" .
        popd
    - name: build dist
      run: |
        mkdir dist
        cp ./cmd/longtail/longtail dist/
    - uses: actions/upload-artifact@master
      with:
        name: dist-macos-x64
        path: dist

  build-win32:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: build cmd
      run: |
        pushd ./cmd/longtail
        go build -ldflags="-s -w" .
        popd
    - name: build dist
      run: |
        mkdir dist
        cp ./cmd/longtail/longtail.exe dist/
    - uses: actions/upload-artifact@master
      with:
        name: dist-win32-x64
        path: dist

  create-release:

    runs-on: ubuntu-latest

    needs: [build-linux, build-macos, build-win32]

    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
           - *UPDATED* Update to longtail v0.0.37.
           - *CHANGED* Using pre-build static library from longtail release (AVX2 and AVX512 enabled in Blake3)
           - *CHANGED* upsync now uses RetargetContent on block store for better block organization for new blocks
           - *CHANGED* explictly flush block stores before writing version index
           - *CHANGED* added retry logic when storing GCS content index
           - *ADDED* `printVersionIndex` command line function to print info about a version index
           - *ADDED* `printContentIndex` command line function to print info about a content index
           - *ADDED* `--version-content-index-path` option for upsync to create a content index covering just the version
           - *ADDED* `validate` command to verify that a version index can find all its content in a store
           - *FIXED* removed redundant retry logic for GCS index fetch
           - *FIXED* errors in GCS block store now propagates properly instead of just log and silence pass
           - *FIXED* better logic for bundling missing content into blocks to reduce duplication of block data
        draft: false
        prerelease: false
    - name: Download Linux artifacts
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-x64
        path: dist-linux-x64
    - name: Download MacOs artifacts
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-x64
        path: dist-macos-x64
    - name: Download Win32 artifacts
      uses: actions/download-artifact@v1
      with:
        name: dist-win32-x64
        path: dist-win32-x64
    - name: Zip Linux artifacts
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./linux-x64.zip ./dist-linux-x64
    - name: Zip MacOS artifacts
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./macos-x64.zip ./dist-macos-x64
    - name: Zip Win32 artifacts
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./win32-x64.zip ./dist-win32-x64
    - name: Upload to GitHub release
      uses: Roang-zero1/github-upload-release-artifacts-action@master
      with:
        args: |
          win32-x64.zip
          linux-x64.zip
          macos-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
